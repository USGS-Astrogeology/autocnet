### Cluster Configuration ###
cluster:
    # The number of times to retry a failing cluster job
    maxfailures: 3
    # Which processing queue should be used?
    queue: 'shortall'
    # Location to put <jobid.log> files for cluster jobs
    cluster_log_dir: '/scratch/jlaura/elysium/logs'
    # What cluster submission tool should be used
    cluster_submission: 'slurm'  # or `pbs`
    # What scratch or temporary area should be used for temporary file creation
    tmp_scratch_dir: '/scratch/jlaura'

    # The amount of RAM (in MB) to request for jobs
    extractor_memory: 1000
    processing_memory: 1000

### Database Configuration ###
database:
    # Name of the database management system. For example, postgresql or sqlite
    type: 'postgresql'
    # Username used to log in to the database
    username: 'sample'
    # Password used to log in to the database
    password: 'sample'
    # Host machine name (or localhost) where the database is running
    host: 'autocnet.wr.usgs.gov'
    # Port that the database is exposed on
    port: 5432
    # Port where a proxy that manages database connections is running
    pgbouncer_port: 6543
    # The name of the database to connect to.  Tables will be created inside this DB.
    name: 'jelysiumtest' # This needs to be all lowercase for PostGreSQL!
    # The number of seconds to wait while attemping to connect to the DB.
    timeout: 500

### Pfeffernusse / CSM Configuration ###
pfeffernusse:
    # URL to the service that serves CSM compliant ISDs
    url: 'http://pfeffer.wr.usgs.gov/v1/pds'

### Redis Configuration ###
redis:
    # Name of the redis queue. Ensure it is unique to avoid multiple uses
    # of the same redis queue.
    basename: 'elysium'
    # Hostname (or localhost) where the redis server is running
    host: 'autocnet.wr.usgs.gov'
    # Port that redis is accepting connections on
    port: '6379'
    # The name of the queue that successful job messages are pushed. This
    # name should be unique to avoid collision with other users.
    completed_queue: 'jely:done'
    # The name of the queue used for jobs that need to be started. This
    # name should be unique to avoid collision with other users.
    processing_queue: 'jely:proc'
    # The name of the queue that currently processing jobs are pushed to. This
    # name should be unique to avoid collision with other users.
    working_queue: 'jely:working'

### Spatial Reference Setup ###
spatial:
    # The name of the target body that will be output in ISIS control networks.
    target: 'MARS'
    # The following two values need to be added to the database that is storing
    # the spatial information.
    #
    # The spatial reference identifier for latitudinal geometries in the database.
    latitudinal_srid: 949900
    # The spatial reference identifier for rectangular geometries in the database.
    rectangular_srid: 949980
    # The radii of the body. If the body is a sphere, these values should match.
    # Units are in meters
    semimajor_rad: 3396190
    semiminor_rad: 3376200
    # A compliant proj4 string. Checkout http://spatialreference.org for examples
    # for planetary bodies.
    proj4_str: '+proj:longlat +a:3396190 +b:3376200 +no_defs'
    # DEM used to generate height values for projection
    dem: '/scratch/jlaura/mars/molaMarsPlanetaryRadius.cub'

### Working Directories ###
directories:
    # The directory where VRTs should be created
    vrt_dir: '/sratch/jlaura/elysium/vrt'

### Algorithms ###
# This section contains definitions for algorithms available
# to AutoCNet. When populated, the values in these blocks
# are parsed on job submission and used as the args/kwargs.
# When an algorithm has multiple entries, e.g., 3 for `ring_match`,
# the algorithm will be run up to 3 times. The first time, it is
# assumed that the strictest parametrization is used. If this
# fails, the next parametrization is used and so forth until either
# the algorithm returns successfully or all parameter combinations
# have been applied. This capability is experimental!
algorithms:
     ring_match:
         - target_points: 25
           tolerance: 0.01
         - target_points: 20
           tolerance: 0.01
         - target_points: 25
           tolerance: 0.02
     compute_fundamental_matrix:
         - tolerance: 0.3
           reproj_threshold: 10
           initial_x_size: 500
           initial_y_size: 500
           corr_x_size: 40
           corr_y_size: 40
         - tolerance: 0.3
           reproj_threshold: 15
           initial_x_size: 500
           initial_y_size: 500
           corr_x_size: 40
           corr_y_size: 40
         - tolerance: 0.25
           reproj_threshold: 20
           initial_x_size: 500
           initial_y_size: 500
           corr_x_size: 40
           corr_y_size: 40
